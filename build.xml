<project name="ApiCashiering"  default="dist" basedir=".">
	<description>
		Web Services build file
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist"  location="dist"/>
	<property name="webcontent"  location="WebContent"/>

	<!-- set the operating system test properties -->
	<condition property="isMac">
		<os family="mac" />
	</condition>

	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<condition property="protoc_binary" value="compiler/protoc-3.0.0-beta-1-osx-x86_64.exe" else="compiler/protoc-3.0.0-beta-1-linux-x86_64.exe">
		<isset property="isMac"/>
	</condition>

	<path id="classpath">
		<fileset dir="./dependencies/">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<!-- Generates protocol buffers. -->
	<target name="proto" description="compile proto files">
		<exec executable="${protoc_binary}" failonerror="true">
			<arg value="--java_out=src/" />
			<arg line="src/trips.proto" />
		</exec>
	</target>

	<target name="compile" depends="init,proto"
		description="compile the source " >
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}">
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib"/>

		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/lib/ApiCashiering-${DSTAMP}.jar" basedir="${build}"/>
	</target>

	<target name="war" depends="compile"
		description="generate the distribution war" >

		<!-- Create the war distribution directory -->
		<mkdir dir="${dist}/war"/>

		<!-- Follow standard WAR structure -->
		<copydir dest="${dist}/war/build/WEB-INF/" src="${webcontent}/WEB-INF/" />
		<copydir dest="${dist}/war/build/WEB-INF/classes/" src="${build}" />

		<jar jarfile="${dist}/war/ApiCashiering-${DSTAMP}.war" basedir="${dist}/war/build/"/>
	</target>

	<target name="clean"
		description="clean up" >

		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>
